# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: E.P.-phone-Home

on:
  push:
    branches: [ master ]


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checking main branch from GitHub
      uses: actions/checkout@v2
    
    - name: Login to DockerHub Registry
      run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: '1.8'
    - name: echo number of process
      run : echo $GITHUB_RUN_NUMBER
        
    - name: Build with Maven
      run: cd my-app &&
           mvn -U versions:set -DnewVersion=1.0.$GITHUB_RUN_NUMBER &&
           mvn -B package -f pom.xml 
           
           
      
    
        
    - name: List files in my-app directory
      run: ls -a my-app/target/
    - name: Copy artifact to folder staging 
      run: mkdir staging &&
           cp my-app/target/m*.jar staging
    - name: Run Hello World
      run: cd my-app &&
           java -cp target/my-app-1.0.$GITHUB_RUN_NUMBER.jar com.mycompany.app.App    
     
    - name: Create a Docker image 
      run : docker build -t epy1234/ep-phone-home:1.0.$GITHUB_RUN_NUMBER . &&
            docker images
      
    - name: Push image to DockerHub 
      run : docker push epy1234/ep-phone-home:1.0.$GITHUB_RUN_NUMBER &&
            docker rmi epy1234/ep-phone-home:1.0.$GITHUB_RUN_NUMBER
            
      
    - name: Run Docker image 
      run : docker pull epy1234/ep-phone-home:1.0.$GITHUB_RUN_NUMBER &&
            docker ps
            
           
    #- name: create artifact
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: Kepler-Artifact
    #    path: staging
        
    
    
    
        
      
